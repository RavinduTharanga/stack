"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirtualMachineCloud = void 0;
const fs = require("fs");
const base_1 = require("./base");
/**
* Logic specific to be run inside a virtual machine outside of public clouds
 */
class VirtualMachineCloud extends base_1.BaseCloud {
    constructor(options) {
        super(options);
        this.cloudTags = this.cloudTags.concat([
            "virtual-machine",
            "hypervisor",
            "system-services"
        ]);
    }
    /**
     * No public (myip) IP in VMs
     */
    _getPublicIP() {
        return this._getPrivateIP();
    }
    /**
     * For VMs, support a /bitnami/.vmsettings file that can be created at build time or created
     * before provisioner is run
     */
    async _getUserDataNow(key) {
        if (fs.existsSync("/bitnami/.vmsettings")) {
            const userDataScript = fs.readFileSync("/bitnami/.vmsettings").toString();
            return this._getParameterFromUserData(userDataScript, key);
        }
        else {
            return undefined;
        }
    }
}
exports.VirtualMachineCloud = VirtualMachineCloud;
;
